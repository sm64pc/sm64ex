# Makefile.in generated by automake 1.11.6 from Makefile.am.
# test/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/audiofile
pkgincludedir = $(includedir)/audiofile
pkglibdir = $(libdir)/audiofile
pkglibexecdir = $(libexecdir)/audiofile
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-w64-mingw32
host_triplet = x86_64-w64-mingw32
TESTS = ADPCM$(EXEEXT) AES$(EXEEXT) ALAC$(EXEEXT) \
	ChannelMatrix$(EXEEXT) Error$(EXEEXT) FloatToInt$(EXEEXT) \
	Instrument$(EXEEXT) IntToFloat$(EXEEXT) \
	InvalidCompressionFormat$(EXEEXT) InvalidSampleFormat$(EXEEXT) \
	Large$(EXEEXT) Loop$(EXEEXT) Marker$(EXEEXT) \
	Miscellaneous$(EXEEXT) NeXT$(EXEEXT) PCMData$(EXEEXT) \
	PCMMapping$(EXEEXT) Pipe$(EXEEXT) Query$(EXEEXT) \
	SampleFormat$(EXEEXT) Seek$(EXEEXT) Sign$(EXEEXT) \
	VirtualFile$(EXEEXT) floatto24$(EXEEXT) query2$(EXEEXT) \
	sixteen-to-eight$(EXEEXT) testchannelmatrix$(EXEEXT) \
	testdouble$(EXEEXT) testfloat$(EXEEXT) testmarkers$(EXEEXT) \
	twentyfour$(EXEEXT) twentyfour2$(EXEEXT) writealaw$(EXEEXT) \
	writeraw$(EXEEXT) writeulaw$(EXEEXT) $(am__EXEEXT_1)
#am__append_1 = FLAC
check_PROGRAMS = $(am__EXEEXT_2) instparamtest$(EXEEXT) \
	instparamwrite$(EXEEXT) printmarkers$(EXEEXT) \
	testaupv$(EXEEXT)
subdir = test
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
#am__EXEEXT_1 = FLAC$(EXEEXT)
am__EXEEXT_2 = ADPCM$(EXEEXT) AES$(EXEEXT) ALAC$(EXEEXT) \
	ChannelMatrix$(EXEEXT) Error$(EXEEXT) FloatToInt$(EXEEXT) \
	Instrument$(EXEEXT) IntToFloat$(EXEEXT) \
	InvalidCompressionFormat$(EXEEXT) InvalidSampleFormat$(EXEEXT) \
	Large$(EXEEXT) Loop$(EXEEXT) Marker$(EXEEXT) \
	Miscellaneous$(EXEEXT) NeXT$(EXEEXT) PCMData$(EXEEXT) \
	PCMMapping$(EXEEXT) Pipe$(EXEEXT) Query$(EXEEXT) \
	SampleFormat$(EXEEXT) Seek$(EXEEXT) Sign$(EXEEXT) \
	VirtualFile$(EXEEXT) floatto24$(EXEEXT) query2$(EXEEXT) \
	sixteen-to-eight$(EXEEXT) testchannelmatrix$(EXEEXT) \
	testdouble$(EXEEXT) testfloat$(EXEEXT) testmarkers$(EXEEXT) \
	twentyfour$(EXEEXT) twentyfour2$(EXEEXT) writealaw$(EXEEXT) \
	writeraw$(EXEEXT) writeulaw$(EXEEXT) $(am__EXEEXT_1)
am_ADPCM_OBJECTS = ADPCM.$(OBJEXT) TestUtilities.$(OBJEXT)
ADPCM_OBJECTS = $(am_ADPCM_OBJECTS)
ADPCM_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_AES_OBJECTS = AES.$(OBJEXT) TestUtilities.$(OBJEXT)
AES_OBJECTS = $(am_AES_OBJECTS)
AES_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_ALAC_OBJECTS = ALAC.$(OBJEXT) TestUtilities.$(OBJEXT)
ALAC_OBJECTS = $(am_ALAC_OBJECTS)
ALAC_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_ChannelMatrix_OBJECTS = ChannelMatrix.$(OBJEXT) \
	TestUtilities.$(OBJEXT)
ChannelMatrix_OBJECTS = $(am_ChannelMatrix_OBJECTS)
ChannelMatrix_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_Error_OBJECTS = Error.$(OBJEXT) TestUtilities.$(OBJEXT)
Error_OBJECTS = $(am_Error_OBJECTS)
Error_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_FLAC_OBJECTS = FLAC.$(OBJEXT) TestUtilities.$(OBJEXT)
FLAC_OBJECTS = $(am_FLAC_OBJECTS)
FLAC_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_FloatToInt_OBJECTS = FloatToInt.$(OBJEXT) TestUtilities.$(OBJEXT)
FloatToInt_OBJECTS = $(am_FloatToInt_OBJECTS)
FloatToInt_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_Instrument_OBJECTS = Instrument.$(OBJEXT) TestUtilities.$(OBJEXT)
Instrument_OBJECTS = $(am_Instrument_OBJECTS)
Instrument_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_IntToFloat_OBJECTS = IntToFloat.$(OBJEXT) TestUtilities.$(OBJEXT)
IntToFloat_OBJECTS = $(am_IntToFloat_OBJECTS)
IntToFloat_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_InvalidCompressionFormat_OBJECTS =  \
	InvalidCompressionFormat.$(OBJEXT) TestUtilities.$(OBJEXT)
InvalidCompressionFormat_OBJECTS =  \
	$(am_InvalidCompressionFormat_OBJECTS)
InvalidCompressionFormat_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_InvalidSampleFormat_OBJECTS = InvalidSampleFormat.$(OBJEXT) \
	TestUtilities.$(OBJEXT)
InvalidSampleFormat_OBJECTS = $(am_InvalidSampleFormat_OBJECTS)
InvalidSampleFormat_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_Large_OBJECTS = Large.$(OBJEXT) TestUtilities.$(OBJEXT)
Large_OBJECTS = $(am_Large_OBJECTS)
Large_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_Loop_OBJECTS = Loop.$(OBJEXT) TestUtilities.$(OBJEXT)
Loop_OBJECTS = $(am_Loop_OBJECTS)
Loop_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_Marker_OBJECTS = Marker.$(OBJEXT) TestUtilities.$(OBJEXT)
Marker_OBJECTS = $(am_Marker_OBJECTS)
Marker_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_Miscellaneous_OBJECTS = Miscellaneous.$(OBJEXT) \
	TestUtilities.$(OBJEXT)
Miscellaneous_OBJECTS = $(am_Miscellaneous_OBJECTS)
Miscellaneous_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_NeXT_OBJECTS = NeXT.$(OBJEXT) TestUtilities.$(OBJEXT)
NeXT_OBJECTS = $(am_NeXT_OBJECTS)
NeXT_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_PCMData_OBJECTS = PCMData.$(OBJEXT) TestUtilities.$(OBJEXT)
PCMData_OBJECTS = $(am_PCMData_OBJECTS)
PCMData_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_PCMMapping_OBJECTS = PCMMapping.$(OBJEXT) TestUtilities.$(OBJEXT)
PCMMapping_OBJECTS = $(am_PCMMapping_OBJECTS)
PCMMapping_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_Pipe_OBJECTS = Pipe.$(OBJEXT) TestUtilities.$(OBJEXT)
Pipe_OBJECTS = $(am_Pipe_OBJECTS)
Pipe_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_Query_OBJECTS = Query.$(OBJEXT) TestUtilities.$(OBJEXT)
Query_OBJECTS = $(am_Query_OBJECTS)
Query_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_SampleFormat_OBJECTS = SampleFormat.$(OBJEXT) \
	TestUtilities.$(OBJEXT)
SampleFormat_OBJECTS = $(am_SampleFormat_OBJECTS)
SampleFormat_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_Seek_OBJECTS = Seek.$(OBJEXT) TestUtilities.$(OBJEXT)
Seek_OBJECTS = $(am_Seek_OBJECTS)
Seek_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_Sign_OBJECTS = Sign.$(OBJEXT) TestUtilities.$(OBJEXT)
Sign_OBJECTS = $(am_Sign_OBJECTS)
Sign_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_VirtualFile_OBJECTS = VirtualFile.$(OBJEXT) TestUtilities.$(OBJEXT)
VirtualFile_OBJECTS = $(am_VirtualFile_OBJECTS)
VirtualFile_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_floatto24_OBJECTS = floatto24.$(OBJEXT) TestUtilities.$(OBJEXT)
floatto24_OBJECTS = $(am_floatto24_OBJECTS)
floatto24_LDADD = $(LDADD)
floatto24_DEPENDENCIES = $(LIBAUDIOFILE)
instparamtest_SOURCES = instparamtest.c
instparamtest_OBJECTS = instparamtest.$(OBJEXT)
instparamtest_LDADD = $(LDADD)
instparamtest_DEPENDENCIES = $(LIBAUDIOFILE)
instparamwrite_SOURCES = instparamwrite.c
instparamwrite_OBJECTS = instparamwrite.$(OBJEXT)
instparamwrite_LDADD = $(LDADD)
instparamwrite_DEPENDENCIES = $(LIBAUDIOFILE)
am_printmarkers_OBJECTS = printmarkers.$(OBJEXT)
printmarkers_OBJECTS = $(am_printmarkers_OBJECTS)
printmarkers_DEPENDENCIES = $(LIBAUDIOFILE)
query2_SOURCES = query2.c
query2_OBJECTS = query2.$(OBJEXT)
query2_LDADD = $(LDADD)
query2_DEPENDENCIES = $(LIBAUDIOFILE)
am_sixteen_to_eight_OBJECTS = sixteen-to-eight.$(OBJEXT) \
	TestUtilities.$(OBJEXT)
sixteen_to_eight_OBJECTS = $(am_sixteen_to_eight_OBJECTS)
sixteen_to_eight_LDADD = $(LDADD)
sixteen_to_eight_DEPENDENCIES = $(LIBAUDIOFILE)
testaupv_SOURCES = testaupv.c
testaupv_OBJECTS = testaupv.$(OBJEXT)
testaupv_LDADD = $(LDADD)
testaupv_DEPENDENCIES = $(LIBAUDIOFILE)
am_testchannelmatrix_OBJECTS = testchannelmatrix.$(OBJEXT) \
	TestUtilities.$(OBJEXT)
testchannelmatrix_OBJECTS = $(am_testchannelmatrix_OBJECTS)
testchannelmatrix_LDADD = $(LDADD)
testchannelmatrix_DEPENDENCIES = $(LIBAUDIOFILE)
am_testdouble_OBJECTS = testdouble.$(OBJEXT) TestUtilities.$(OBJEXT)
testdouble_OBJECTS = $(am_testdouble_OBJECTS)
testdouble_LDADD = $(LDADD)
testdouble_DEPENDENCIES = $(LIBAUDIOFILE)
am_testfloat_OBJECTS = testfloat.$(OBJEXT) TestUtilities.$(OBJEXT)
testfloat_OBJECTS = $(am_testfloat_OBJECTS)
testfloat_LDADD = $(LDADD)
testfloat_DEPENDENCIES = $(LIBAUDIOFILE)
am_testmarkers_OBJECTS = testmarkers.$(OBJEXT) TestUtilities.$(OBJEXT)
testmarkers_OBJECTS = $(am_testmarkers_OBJECTS)
testmarkers_LDADD = $(LDADD)
testmarkers_DEPENDENCIES = $(LIBAUDIOFILE)
am_twentyfour_OBJECTS = twentyfour.$(OBJEXT) TestUtilities.$(OBJEXT)
twentyfour_OBJECTS = $(am_twentyfour_OBJECTS)
twentyfour_LDADD = $(LDADD)
twentyfour_DEPENDENCIES = $(LIBAUDIOFILE)
am_twentyfour2_OBJECTS = twentyfour2.$(OBJEXT) TestUtilities.$(OBJEXT)
twentyfour2_OBJECTS = $(am_twentyfour2_OBJECTS)
twentyfour2_LDADD = $(LDADD)
twentyfour2_DEPENDENCIES = $(LIBAUDIOFILE)
am_writealaw_OBJECTS = writealaw.$(OBJEXT) TestUtilities.$(OBJEXT)
writealaw_OBJECTS = $(am_writealaw_OBJECTS)
writealaw_LDADD = $(LDADD)
writealaw_DEPENDENCIES = $(LIBAUDIOFILE)
am_writeraw_OBJECTS = writeraw.$(OBJEXT) TestUtilities.$(OBJEXT)
writeraw_OBJECTS = $(am_writeraw_OBJECTS)
writeraw_LDADD = $(LDADD)
writeraw_DEPENDENCIES = $(LIBAUDIOFILE)
am_writeulaw_OBJECTS = writeulaw.$(OBJEXT) TestUtilities.$(OBJEXT)
writeulaw_OBJECTS = $(am_writeulaw_OBJECTS)
writeulaw_LDADD = $(LDADD)
writeulaw_DEPENDENCIES = $(LIBAUDIOFILE)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(ADPCM_SOURCES) $(AES_SOURCES) $(ALAC_SOURCES) \
	$(ChannelMatrix_SOURCES) $(Error_SOURCES) $(FLAC_SOURCES) \
	$(FloatToInt_SOURCES) $(Instrument_SOURCES) \
	$(IntToFloat_SOURCES) $(InvalidCompressionFormat_SOURCES) \
	$(InvalidSampleFormat_SOURCES) $(Large_SOURCES) \
	$(Loop_SOURCES) $(Marker_SOURCES) $(Miscellaneous_SOURCES) \
	$(NeXT_SOURCES) $(PCMData_SOURCES) $(PCMMapping_SOURCES) \
	$(Pipe_SOURCES) $(Query_SOURCES) $(SampleFormat_SOURCES) \
	$(Seek_SOURCES) $(Sign_SOURCES) $(VirtualFile_SOURCES) \
	$(floatto24_SOURCES) instparamtest.c instparamwrite.c \
	$(printmarkers_SOURCES) query2.c $(sixteen_to_eight_SOURCES) \
	testaupv.c $(testchannelmatrix_SOURCES) $(testdouble_SOURCES) \
	$(testfloat_SOURCES) $(testmarkers_SOURCES) \
	$(twentyfour_SOURCES) $(twentyfour2_SOURCES) \
	$(writealaw_SOURCES) $(writeraw_SOURCES) $(writeulaw_SOURCES)
DIST_SOURCES = $(ADPCM_SOURCES) $(AES_SOURCES) $(ALAC_SOURCES) \
	$(ChannelMatrix_SOURCES) $(Error_SOURCES) $(FLAC_SOURCES) \
	$(FloatToInt_SOURCES) $(Instrument_SOURCES) \
	$(IntToFloat_SOURCES) $(InvalidCompressionFormat_SOURCES) \
	$(InvalidSampleFormat_SOURCES) $(Large_SOURCES) \
	$(Loop_SOURCES) $(Marker_SOURCES) $(Miscellaneous_SOURCES) \
	$(NeXT_SOURCES) $(PCMData_SOURCES) $(PCMMapping_SOURCES) \
	$(Pipe_SOURCES) $(Query_SOURCES) $(SampleFormat_SOURCES) \
	$(Seek_SOURCES) $(Sign_SOURCES) $(VirtualFile_SOURCES) \
	$(floatto24_SOURCES) instparamtest.c instparamwrite.c \
	$(printmarkers_SOURCES) query2.c $(sixteen_to_eight_SOURCES) \
	testaupv.c $(testchannelmatrix_SOURCES) $(testdouble_SOURCES) \
	$(testfloat_SOURCES) $(testmarkers_SOURCES) \
	$(twentyfour_SOURCES) $(twentyfour2_SOURCES) \
	$(writealaw_SOURCES) $(writeraw_SOURCES) $(writeulaw_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
A2X = 
ACLOCAL = ${SHELL} /i/Development/sm64pc/tools/audiofile-0.3.6/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AR = ar
ASCIIDOC = 
AUDIOFILE_VERSION = 0.3.6
AUDIOFILE_VERSION_INFO = 1:0:0
AUTOCONF = ${SHELL} /i/Development/sm64pc/tools/audiofile-0.3.6/missing --run autoconf
AUTOHEADER = ${SHELL} /i/Development/sm64pc/tools/audiofile-0.3.6/missing --run autoheader
AUTOMAKE = ${SHELL} /i/Development/sm64pc/tools/audiofile-0.3.6/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
COVERAGE_CFLAGS = 
COVERAGE_LIBS = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = cygpath -w
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = .exe
FGREP = /usr/bin/grep -F
FLAC_CFLAGS = 
FLAC_LIBS = 
GENHTML = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LCOV = 
LD = I:/Development/MSYS2/mingw64/x86_64-w64-mingw32/bin/ld.exe
LDFLAGS = 
LIBOBJS = 
LIBS = -lstdc++
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = cp -pR
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /i/Development/sm64pc/tools/audiofile-0.3.6/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /mingw64/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = audiofile
PACKAGE_BUGREPORT = 
PACKAGE_NAME = audiofile
PACKAGE_STRING = audiofile 0.3.6
PACKAGE_TARNAME = audiofile
PACKAGE_URL = 
PACKAGE_VERSION = 0.3.6
PATH_SEPARATOR = :
PKG_CONFIG = /mingw64/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /mingw64/lib/pkgconfig:/mingw64/share/pkgconfig
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TEST_BIN = 
VALGRIND = 
VERSION = 0.3.6
WERROR_CFLAGS = 
abs_builddir = /i/Development/sm64pc/tools/audiofile-0.3.6/test
abs_srcdir = /i/Development/sm64pc/tools/audiofile-0.3.6/test
abs_top_builddir = /i/Development/sm64pc/tools/audiofile-0.3.6
abs_top_srcdir = /i/Development/sm64pc/tools/audiofile-0.3.6
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-w64-mingw32
build_alias = x86_64-w64-mingw32
build_cpu = x86_64
build_os = mingw32
build_vendor = w64
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-w64-mingw32
host_alias = 
host_cpu = x86_64
host_os = mingw32
host_vendor = w64
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /i/Development/sm64pc/tools/audiofile-0.3.6/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /usr/bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /mingw64
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
INCLUDES = -I$(top_srcdir)/libaudiofile -I$(top_srcdir)
#VALGRIND_FLAGS = --quiet --leak-check=full --show-reachable=yes --error-exitcode=1
#TESTS_ENVIRONMENT = $(top_builddir)/libtool --mode=execute $(VALGRIND) $(VALGRIND_FLAGS)
LIBAUDIOFILE = $(top_builddir)/libaudiofile/libaudiofile.la
LDADD = $(LIBAUDIOFILE)
DEPENDENCIES = $(LIBAUDIOFILE)
LIBGTEST = ../gtest/libgtest.la
ADPCM_SOURCES = ADPCM.cpp TestUtilities.cpp TestUtilities.h
ADPCM_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
AES_SOURCES = AES.cpp TestUtilities.cpp TestUtilities.h
AES_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
ALAC_SOURCES = ALAC.cpp Lossless.h TestUtilities.cpp TestUtilities.h
ALAC_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
ChannelMatrix_SOURCES = ChannelMatrix.cpp TestUtilities.cpp TestUtilities.h
ChannelMatrix_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
Error_SOURCES = Error.cpp TestUtilities.cpp TestUtilities.h
Error_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
FLAC_SOURCES = FLAC.cpp Lossless.h TestUtilities.cpp TestUtilities.h
FLAC_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
FloatToInt_SOURCES = FloatToInt.cpp TestUtilities.cpp TestUtilities.h
FloatToInt_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
Instrument_SOURCES = Instrument.cpp TestUtilities.cpp TestUtilities.h
Instrument_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
IntToFloat_SOURCES = IntToFloat.cpp TestUtilities.cpp TestUtilities.h
IntToFloat_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
InvalidCompressionFormat_SOURCES = InvalidCompressionFormat.cpp TestUtilities.cpp TestUtilities.h
InvalidCompressionFormat_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
InvalidSampleFormat_SOURCES = InvalidSampleFormat.cpp TestUtilities.cpp TestUtilities.h
InvalidSampleFormat_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
Large_SOURCES = Large.cpp TestUtilities.cpp TestUtilities.h
Large_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
Loop_SOURCES = Loop.cpp TestUtilities.cpp TestUtilities.h
Loop_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
Marker_SOURCES = Marker.cpp TestUtilities.cpp TestUtilities.h
Marker_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
Miscellaneous_SOURCES = Miscellaneous.cpp TestUtilities.cpp TestUtilities.h
Miscellaneous_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
NeXT_SOURCES = NeXT.cpp TestUtilities.cpp TestUtilities.h
NeXT_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
PCMData_SOURCES = PCMData.cpp TestUtilities.cpp TestUtilities.h
PCMData_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
PCMMapping_SOURCES = PCMMapping.cpp TestUtilities.cpp TestUtilities.h
PCMMapping_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
Pipe_SOURCES = Pipe.cpp TestUtilities.cpp TestUtilities.h
Pipe_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
Query_SOURCES = Query.cpp TestUtilities.cpp TestUtilities.h
Query_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
SampleFormat_SOURCES = SampleFormat.cpp TestUtilities.cpp TestUtilities.h
SampleFormat_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
Seek_SOURCES = Seek.cpp TestUtilities.cpp TestUtilities.h
Seek_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
Sign_SOURCES = Sign.cpp TestUtilities.cpp TestUtilities.h
Sign_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
VirtualFile_SOURCES = VirtualFile.cpp TestUtilities.cpp TestUtilities.h
VirtualFile_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
floatto24_SOURCES = floatto24.c TestUtilities.cpp TestUtilities.h
printmarkers_SOURCES = printmarkers.c
printmarkers_LDADD = $(LIBAUDIOFILE) -lm
sixteen_to_eight_SOURCES = sixteen-to-eight.c TestUtilities.cpp TestUtilities.h
testchannelmatrix_SOURCES = testchannelmatrix.c TestUtilities.cpp TestUtilities.h
testdouble_SOURCES = testdouble.c TestUtilities.cpp TestUtilities.h
testfloat_SOURCES = testfloat.c TestUtilities.cpp TestUtilities.h
testmarkers_SOURCES = testmarkers.c TestUtilities.cpp TestUtilities.h
twentyfour_SOURCES = twentyfour.c TestUtilities.cpp TestUtilities.h
twentyfour2_SOURCES = twentyfour2.c TestUtilities.cpp TestUtilities.h
writealaw_SOURCES = writealaw.c TestUtilities.cpp TestUtilities.h
writeraw_SOURCES = writeraw.c TestUtilities.cpp TestUtilities.h
writeulaw_SOURCES = writeulaw.c TestUtilities.cpp TestUtilities.h
AM_CXXFLAGS = -fno-rtti -fno-exceptions -DGTEST_HAS_RTTI=0 -DGTEST_HAS_EXCEPTIONS=0
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
ADPCM$(EXEEXT): $(ADPCM_OBJECTS) $(ADPCM_DEPENDENCIES) $(EXTRA_ADPCM_DEPENDENCIES) 
	@rm -f ADPCM$(EXEEXT)
	$(CXXLINK) $(ADPCM_OBJECTS) $(ADPCM_LDADD) $(LIBS)
AES$(EXEEXT): $(AES_OBJECTS) $(AES_DEPENDENCIES) $(EXTRA_AES_DEPENDENCIES) 
	@rm -f AES$(EXEEXT)
	$(CXXLINK) $(AES_OBJECTS) $(AES_LDADD) $(LIBS)
ALAC$(EXEEXT): $(ALAC_OBJECTS) $(ALAC_DEPENDENCIES) $(EXTRA_ALAC_DEPENDENCIES) 
	@rm -f ALAC$(EXEEXT)
	$(CXXLINK) $(ALAC_OBJECTS) $(ALAC_LDADD) $(LIBS)
ChannelMatrix$(EXEEXT): $(ChannelMatrix_OBJECTS) $(ChannelMatrix_DEPENDENCIES) $(EXTRA_ChannelMatrix_DEPENDENCIES) 
	@rm -f ChannelMatrix$(EXEEXT)
	$(CXXLINK) $(ChannelMatrix_OBJECTS) $(ChannelMatrix_LDADD) $(LIBS)
Error$(EXEEXT): $(Error_OBJECTS) $(Error_DEPENDENCIES) $(EXTRA_Error_DEPENDENCIES) 
	@rm -f Error$(EXEEXT)
	$(CXXLINK) $(Error_OBJECTS) $(Error_LDADD) $(LIBS)
FLAC$(EXEEXT): $(FLAC_OBJECTS) $(FLAC_DEPENDENCIES) $(EXTRA_FLAC_DEPENDENCIES) 
	@rm -f FLAC$(EXEEXT)
	$(CXXLINK) $(FLAC_OBJECTS) $(FLAC_LDADD) $(LIBS)
FloatToInt$(EXEEXT): $(FloatToInt_OBJECTS) $(FloatToInt_DEPENDENCIES) $(EXTRA_FloatToInt_DEPENDENCIES) 
	@rm -f FloatToInt$(EXEEXT)
	$(CXXLINK) $(FloatToInt_OBJECTS) $(FloatToInt_LDADD) $(LIBS)
Instrument$(EXEEXT): $(Instrument_OBJECTS) $(Instrument_DEPENDENCIES) $(EXTRA_Instrument_DEPENDENCIES) 
	@rm -f Instrument$(EXEEXT)
	$(CXXLINK) $(Instrument_OBJECTS) $(Instrument_LDADD) $(LIBS)
IntToFloat$(EXEEXT): $(IntToFloat_OBJECTS) $(IntToFloat_DEPENDENCIES) $(EXTRA_IntToFloat_DEPENDENCIES) 
	@rm -f IntToFloat$(EXEEXT)
	$(CXXLINK) $(IntToFloat_OBJECTS) $(IntToFloat_LDADD) $(LIBS)
InvalidCompressionFormat$(EXEEXT): $(InvalidCompressionFormat_OBJECTS) $(InvalidCompressionFormat_DEPENDENCIES) $(EXTRA_InvalidCompressionFormat_DEPENDENCIES) 
	@rm -f InvalidCompressionFormat$(EXEEXT)
	$(CXXLINK) $(InvalidCompressionFormat_OBJECTS) $(InvalidCompressionFormat_LDADD) $(LIBS)
InvalidSampleFormat$(EXEEXT): $(InvalidSampleFormat_OBJECTS) $(InvalidSampleFormat_DEPENDENCIES) $(EXTRA_InvalidSampleFormat_DEPENDENCIES) 
	@rm -f InvalidSampleFormat$(EXEEXT)
	$(CXXLINK) $(InvalidSampleFormat_OBJECTS) $(InvalidSampleFormat_LDADD) $(LIBS)
Large$(EXEEXT): $(Large_OBJECTS) $(Large_DEPENDENCIES) $(EXTRA_Large_DEPENDENCIES) 
	@rm -f Large$(EXEEXT)
	$(CXXLINK) $(Large_OBJECTS) $(Large_LDADD) $(LIBS)
Loop$(EXEEXT): $(Loop_OBJECTS) $(Loop_DEPENDENCIES) $(EXTRA_Loop_DEPENDENCIES) 
	@rm -f Loop$(EXEEXT)
	$(CXXLINK) $(Loop_OBJECTS) $(Loop_LDADD) $(LIBS)
Marker$(EXEEXT): $(Marker_OBJECTS) $(Marker_DEPENDENCIES) $(EXTRA_Marker_DEPENDENCIES) 
	@rm -f Marker$(EXEEXT)
	$(CXXLINK) $(Marker_OBJECTS) $(Marker_LDADD) $(LIBS)
Miscellaneous$(EXEEXT): $(Miscellaneous_OBJECTS) $(Miscellaneous_DEPENDENCIES) $(EXTRA_Miscellaneous_DEPENDENCIES) 
	@rm -f Miscellaneous$(EXEEXT)
	$(CXXLINK) $(Miscellaneous_OBJECTS) $(Miscellaneous_LDADD) $(LIBS)
NeXT$(EXEEXT): $(NeXT_OBJECTS) $(NeXT_DEPENDENCIES) $(EXTRA_NeXT_DEPENDENCIES) 
	@rm -f NeXT$(EXEEXT)
	$(CXXLINK) $(NeXT_OBJECTS) $(NeXT_LDADD) $(LIBS)
PCMData$(EXEEXT): $(PCMData_OBJECTS) $(PCMData_DEPENDENCIES) $(EXTRA_PCMData_DEPENDENCIES) 
	@rm -f PCMData$(EXEEXT)
	$(CXXLINK) $(PCMData_OBJECTS) $(PCMData_LDADD) $(LIBS)
PCMMapping$(EXEEXT): $(PCMMapping_OBJECTS) $(PCMMapping_DEPENDENCIES) $(EXTRA_PCMMapping_DEPENDENCIES) 
	@rm -f PCMMapping$(EXEEXT)
	$(CXXLINK) $(PCMMapping_OBJECTS) $(PCMMapping_LDADD) $(LIBS)
Pipe$(EXEEXT): $(Pipe_OBJECTS) $(Pipe_DEPENDENCIES) $(EXTRA_Pipe_DEPENDENCIES) 
	@rm -f Pipe$(EXEEXT)
	$(CXXLINK) $(Pipe_OBJECTS) $(Pipe_LDADD) $(LIBS)
Query$(EXEEXT): $(Query_OBJECTS) $(Query_DEPENDENCIES) $(EXTRA_Query_DEPENDENCIES) 
	@rm -f Query$(EXEEXT)
	$(CXXLINK) $(Query_OBJECTS) $(Query_LDADD) $(LIBS)
SampleFormat$(EXEEXT): $(SampleFormat_OBJECTS) $(SampleFormat_DEPENDENCIES) $(EXTRA_SampleFormat_DEPENDENCIES) 
	@rm -f SampleFormat$(EXEEXT)
	$(CXXLINK) $(SampleFormat_OBJECTS) $(SampleFormat_LDADD) $(LIBS)
Seek$(EXEEXT): $(Seek_OBJECTS) $(Seek_DEPENDENCIES) $(EXTRA_Seek_DEPENDENCIES) 
	@rm -f Seek$(EXEEXT)
	$(CXXLINK) $(Seek_OBJECTS) $(Seek_LDADD) $(LIBS)
Sign$(EXEEXT): $(Sign_OBJECTS) $(Sign_DEPENDENCIES) $(EXTRA_Sign_DEPENDENCIES) 
	@rm -f Sign$(EXEEXT)
	$(CXXLINK) $(Sign_OBJECTS) $(Sign_LDADD) $(LIBS)
VirtualFile$(EXEEXT): $(VirtualFile_OBJECTS) $(VirtualFile_DEPENDENCIES) $(EXTRA_VirtualFile_DEPENDENCIES) 
	@rm -f VirtualFile$(EXEEXT)
	$(CXXLINK) $(VirtualFile_OBJECTS) $(VirtualFile_LDADD) $(LIBS)
floatto24$(EXEEXT): $(floatto24_OBJECTS) $(floatto24_DEPENDENCIES) $(EXTRA_floatto24_DEPENDENCIES) 
	@rm -f floatto24$(EXEEXT)
	$(CXXLINK) $(floatto24_OBJECTS) $(floatto24_LDADD) $(LIBS)
instparamtest$(EXEEXT): $(instparamtest_OBJECTS) $(instparamtest_DEPENDENCIES) $(EXTRA_instparamtest_DEPENDENCIES) 
	@rm -f instparamtest$(EXEEXT)
	$(LINK) $(instparamtest_OBJECTS) $(instparamtest_LDADD) $(LIBS)
instparamwrite$(EXEEXT): $(instparamwrite_OBJECTS) $(instparamwrite_DEPENDENCIES) $(EXTRA_instparamwrite_DEPENDENCIES) 
	@rm -f instparamwrite$(EXEEXT)
	$(LINK) $(instparamwrite_OBJECTS) $(instparamwrite_LDADD) $(LIBS)
printmarkers$(EXEEXT): $(printmarkers_OBJECTS) $(printmarkers_DEPENDENCIES) $(EXTRA_printmarkers_DEPENDENCIES) 
	@rm -f printmarkers$(EXEEXT)
	$(LINK) $(printmarkers_OBJECTS) $(printmarkers_LDADD) $(LIBS)
query2$(EXEEXT): $(query2_OBJECTS) $(query2_DEPENDENCIES) $(EXTRA_query2_DEPENDENCIES) 
	@rm -f query2$(EXEEXT)
	$(LINK) $(query2_OBJECTS) $(query2_LDADD) $(LIBS)
sixteen-to-eight$(EXEEXT): $(sixteen_to_eight_OBJECTS) $(sixteen_to_eight_DEPENDENCIES) $(EXTRA_sixteen_to_eight_DEPENDENCIES) 
	@rm -f sixteen-to-eight$(EXEEXT)
	$(CXXLINK) $(sixteen_to_eight_OBJECTS) $(sixteen_to_eight_LDADD) $(LIBS)
testaupv$(EXEEXT): $(testaupv_OBJECTS) $(testaupv_DEPENDENCIES) $(EXTRA_testaupv_DEPENDENCIES) 
	@rm -f testaupv$(EXEEXT)
	$(LINK) $(testaupv_OBJECTS) $(testaupv_LDADD) $(LIBS)
testchannelmatrix$(EXEEXT): $(testchannelmatrix_OBJECTS) $(testchannelmatrix_DEPENDENCIES) $(EXTRA_testchannelmatrix_DEPENDENCIES) 
	@rm -f testchannelmatrix$(EXEEXT)
	$(CXXLINK) $(testchannelmatrix_OBJECTS) $(testchannelmatrix_LDADD) $(LIBS)
testdouble$(EXEEXT): $(testdouble_OBJECTS) $(testdouble_DEPENDENCIES) $(EXTRA_testdouble_DEPENDENCIES) 
	@rm -f testdouble$(EXEEXT)
	$(CXXLINK) $(testdouble_OBJECTS) $(testdouble_LDADD) $(LIBS)
testfloat$(EXEEXT): $(testfloat_OBJECTS) $(testfloat_DEPENDENCIES) $(EXTRA_testfloat_DEPENDENCIES) 
	@rm -f testfloat$(EXEEXT)
	$(CXXLINK) $(testfloat_OBJECTS) $(testfloat_LDADD) $(LIBS)
testmarkers$(EXEEXT): $(testmarkers_OBJECTS) $(testmarkers_DEPENDENCIES) $(EXTRA_testmarkers_DEPENDENCIES) 
	@rm -f testmarkers$(EXEEXT)
	$(CXXLINK) $(testmarkers_OBJECTS) $(testmarkers_LDADD) $(LIBS)
twentyfour$(EXEEXT): $(twentyfour_OBJECTS) $(twentyfour_DEPENDENCIES) $(EXTRA_twentyfour_DEPENDENCIES) 
	@rm -f twentyfour$(EXEEXT)
	$(CXXLINK) $(twentyfour_OBJECTS) $(twentyfour_LDADD) $(LIBS)
twentyfour2$(EXEEXT): $(twentyfour2_OBJECTS) $(twentyfour2_DEPENDENCIES) $(EXTRA_twentyfour2_DEPENDENCIES) 
	@rm -f twentyfour2$(EXEEXT)
	$(CXXLINK) $(twentyfour2_OBJECTS) $(twentyfour2_LDADD) $(LIBS)
writealaw$(EXEEXT): $(writealaw_OBJECTS) $(writealaw_DEPENDENCIES) $(EXTRA_writealaw_DEPENDENCIES) 
	@rm -f writealaw$(EXEEXT)
	$(CXXLINK) $(writealaw_OBJECTS) $(writealaw_LDADD) $(LIBS)
writeraw$(EXEEXT): $(writeraw_OBJECTS) $(writeraw_DEPENDENCIES) $(EXTRA_writeraw_DEPENDENCIES) 
	@rm -f writeraw$(EXEEXT)
	$(CXXLINK) $(writeraw_OBJECTS) $(writeraw_LDADD) $(LIBS)
writeulaw$(EXEEXT): $(writeulaw_OBJECTS) $(writeulaw_DEPENDENCIES) $(EXTRA_writeulaw_DEPENDENCIES) 
	@rm -f writeulaw$(EXEEXT)
	$(CXXLINK) $(writeulaw_OBJECTS) $(writeulaw_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ADPCM.Po
include ./$(DEPDIR)/AES.Po
include ./$(DEPDIR)/ALAC.Po
include ./$(DEPDIR)/ChannelMatrix.Po
include ./$(DEPDIR)/Error.Po
include ./$(DEPDIR)/FLAC.Po
include ./$(DEPDIR)/FloatToInt.Po
include ./$(DEPDIR)/Instrument.Po
include ./$(DEPDIR)/IntToFloat.Po
include ./$(DEPDIR)/InvalidCompressionFormat.Po
include ./$(DEPDIR)/InvalidSampleFormat.Po
include ./$(DEPDIR)/Large.Po
include ./$(DEPDIR)/Loop.Po
include ./$(DEPDIR)/Marker.Po
include ./$(DEPDIR)/Miscellaneous.Po
include ./$(DEPDIR)/NeXT.Po
include ./$(DEPDIR)/PCMData.Po
include ./$(DEPDIR)/PCMMapping.Po
include ./$(DEPDIR)/Pipe.Po
include ./$(DEPDIR)/Query.Po
include ./$(DEPDIR)/SampleFormat.Po
include ./$(DEPDIR)/Seek.Po
include ./$(DEPDIR)/Sign.Po
include ./$(DEPDIR)/TestUtilities.Po
include ./$(DEPDIR)/VirtualFile.Po
include ./$(DEPDIR)/floatto24.Po
include ./$(DEPDIR)/instparamtest.Po
include ./$(DEPDIR)/instparamwrite.Po
include ./$(DEPDIR)/printmarkers.Po
include ./$(DEPDIR)/query2.Po
include ./$(DEPDIR)/sixteen-to-eight.Po
include ./$(DEPDIR)/testaupv.Po
include ./$(DEPDIR)/testchannelmatrix.Po
include ./$(DEPDIR)/testdouble.Po
include ./$(DEPDIR)/testfloat.Po
include ./$(DEPDIR)/testmarkers.Po
include ./$(DEPDIR)/twentyfour.Po
include ./$(DEPDIR)/twentyfour2.Po
include ./$(DEPDIR)/writealaw.Po
include ./$(DEPDIR)/writeraw.Po
include ./$(DEPDIR)/writeulaw.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
